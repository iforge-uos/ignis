// GENERATED by @gel/generate v0.6.2

import * as $ from "../reflection";
import * as _ from "../imports";
import type * as _std from "./std";
import type * as _default from "./default";
import type * as _users from "./users";
import type * as _team from "./team";
import type * as _event from "./event";
export type $AllTargetTarget = {
  "ALL": $.$expr_Literal<$AllTargetTarget>;
  "REPS": $.$expr_Literal<$AllTargetTarget>;
} & $.EnumType<"notification::AllTargetTarget", ["ALL", "REPS"]>;
const AllTargetTarget: $AllTargetTarget = $.makeType<$AllTargetTarget>(_.spec, "a90f5a28-3aac-11f0-bccd-8df151d18588", _.syntax.literal);

export type $DeliveryMethod = {
  "BANNER": $.$expr_Literal<$DeliveryMethod>;
  "EMAIL": $.$expr_Literal<$DeliveryMethod>;
  "TRAY": $.$expr_Literal<$DeliveryMethod>;
  "POPUP": $.$expr_Literal<$DeliveryMethod>;
  "DISCORD": $.$expr_Literal<$DeliveryMethod>;
} & $.EnumType<"notification::DeliveryMethod", ["BANNER", "EMAIL", "TRAY", "POPUP", "DISCORD"]>;
const DeliveryMethod: $DeliveryMethod = $.makeType<$DeliveryMethod>(_.spec, "97b387cc-3aac-11f0-b4b7-dd5fcfe1e6f5", _.syntax.literal);

export type $Status = {
  "DRAFT": $.$expr_Literal<$Status>;
  "REVIEW": $.$expr_Literal<$Status>;
  "QUEUED": $.$expr_Literal<$Status>;
  "SENDING": $.$expr_Literal<$Status>;
  "SENT": $.$expr_Literal<$Status>;
  "ERRORED": $.$expr_Literal<$Status>;
} & $.EnumType<"notification::Status", ["DRAFT", "REVIEW", "QUEUED", "SENDING", "SENT", "ERRORED"]>;
const Status: $Status = $.makeType<$Status>(_.spec, "97b39866-3aac-11f0-bd23-49741d921493", _.syntax.literal);

export type $Type = {
  "ADMIN": $.$expr_Literal<$Type>;
  "ADVERT": $.$expr_Literal<$Type>;
  "ANNOUNCEMENT": $.$expr_Literal<$Type>;
  "EVENT": $.$expr_Literal<$Type>;
  "HEALTH_AND_SAFETY": $.$expr_Literal<$Type>;
  "INFRACTION": $.$expr_Literal<$Type>;
  "PRINTING": $.$expr_Literal<$Type>;
  "QUEUE_SLOT_ACTIVE": $.$expr_Literal<$Type>;
  "RECRUITMENT": $.$expr_Literal<$Type>;
  "REFERRAL": $.$expr_Literal<$Type>;
  "REMINDER": $.$expr_Literal<$Type>;
  "TRAINING": $.$expr_Literal<$Type>;
} & $.EnumType<"notification::Type", ["ADMIN", "ADVERT", "ANNOUNCEMENT", "EVENT", "HEALTH_AND_SAFETY", "INFRACTION", "PRINTING", "QUEUE_SLOT_ACTIVE", "RECRUITMENT", "REFERRAL", "REMINDER", "TRAINING"]>;
const Type: $Type = $.makeType<$Type>(_.spec, "97b3a518-3aac-11f0-9bf3-4ff7282800a5", _.syntax.literal);

export type $AllTargetλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "target": $.PropertyDesc<$AllTargetTarget, $.Cardinality.One, false, false, false, false>;
}>;
type $AllTarget = $.ObjectType<"notification::AllTarget", $AllTargetλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
], "notification::AllTarget">;
const $AllTarget = $.makeType<$AllTarget>(_.spec, "97aaf5bc-3aac-11f0-9f10-4326359d74e6", _.syntax.literal);

const AllTarget: $.$expr_PathNode<$.TypeSet<$AllTarget, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($AllTarget, $.Cardinality.Many), null);

export type $NotificationλShape = $.typeutil.flatten<_default.$AuditableλShape & {
  "content": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "delivery_method": $.PropertyDesc<$DeliveryMethod, $.Cardinality.AtLeastOne, false, false, false, false>;
  "dispatched_at": $.PropertyDesc<_std.$datetime, $.Cardinality.One, false, false, false, true>;
  "priority": $.PropertyDesc<_std.$int16, $.Cardinality.One, false, false, false, true>;
  "status": $.PropertyDesc<$Status, $.Cardinality.One, false, false, false, false>;
  "title": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "type": $.PropertyDesc<$Type, $.Cardinality.One, false, false, false, false>;
  "target": $.LinkDesc<_users.$User | _team.$Team | _event.$Event | $AllTarget | $MailingList, $.Cardinality.AtLeastOne, {}, false, false,  false, false>;
  "<notifications[is users::User]": $.LinkDesc<_users.$User, $.Cardinality.Many, {}, false, false,  false, false>;
  "<notifications[is user]": $.LinkDesc<_default.$user, $.Cardinality.Many, {}, false, false,  false, false>;
  "<notifications[is users::Rep]": $.LinkDesc<_users.$Rep, $.Cardinality.Many, {}, false, false,  false, false>;
  "<notifications": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Notification = $.ObjectType<"notification::Notification", $NotificationλShape, null, [
  ..._default.$Auditable['__exclusives__'],
], "notification::Notification" | "notification::AuthoredNotification" | "notification::SystemNotification">;
const $Notification = $.makeType<$Notification>(_.spec, "9d5218a6-3aac-11f0-81d1-d9c571b6eb1c", _.syntax.literal);

const Notification: $.$expr_PathNode<$.TypeSet<$Notification, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Notification, $.Cardinality.Many), null);

export type $AuthoredNotificationλShape = $.typeutil.flatten<$NotificationλShape & {
  "approved_on": $.PropertyDesc<_std.$datetime, $.Cardinality.AtMostOne, false, false, false, false>;
  "approved_by": $.LinkDesc<_users.$Rep, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "author": $.LinkDesc<_users.$User, $.Cardinality.One, {}, false, false,  false, false>;
}>;
type $AuthoredNotification = $.ObjectType<"notification::AuthoredNotification", $AuthoredNotificationλShape, null, [
  ...$Notification['__exclusives__'],
], "notification::AuthoredNotification">;
const $AuthoredNotification = $.makeType<$AuthoredNotification>(_.spec, "9d546d86-3aac-11f0-b223-8b2af8828806", _.syntax.literal);

const AuthoredNotification: $.$expr_PathNode<$.TypeSet<$AuthoredNotification, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($AuthoredNotification, $.Cardinality.Many), null);

export type $MailingListλShape = $.typeutil.flatten<_default.$AuditableλShape & {
  "description": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "name": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "subscribers": $.LinkDesc<_users.$User, $.Cardinality.Many, {}, false, true,  false, false>;
  "<mailing_list_subscriptions[is users::User]": $.LinkDesc<_users.$User, $.Cardinality.Many, {}, false, false,  false, false>;
  "<mailing_list_subscriptions[is user]": $.LinkDesc<_default.$user, $.Cardinality.Many, {}, false, false,  false, false>;
  "<mailing_list_subscriptions[is users::Rep]": $.LinkDesc<_users.$Rep, $.Cardinality.Many, {}, false, false,  false, false>;
  "<mailing_list_subscriptions": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $MailingList = $.ObjectType<"notification::MailingList", $MailingListλShape, null, [
  ..._default.$Auditable['__exclusives__'],
], "notification::MailingList">;
const $MailingList = $.makeType<$MailingList>(_.spec, "9d56dbe8-3aac-11f0-8a7b-a3e83108c227", _.syntax.literal);

const MailingList: $.$expr_PathNode<$.TypeSet<$MailingList, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($MailingList, $.Cardinality.Many), null);

export type $SystemNotificationλShape = $.typeutil.flatten<$NotificationλShape & {
  "source": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
}>;
type $SystemNotification = $.ObjectType<"notification::SystemNotification", $SystemNotificationλShape, null, [
  ...$Notification['__exclusives__'],
], "notification::SystemNotification">;
const $SystemNotification = $.makeType<$SystemNotification>(_.spec, "9d5a323e-3aac-11f0-9d15-d367a2fe9a3d", _.syntax.literal);

const SystemNotification: $.$expr_PathNode<$.TypeSet<$SystemNotification, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($SystemNotification, $.Cardinality.Many), null);



export { AllTargetTarget, DeliveryMethod, Status, Type, $AllTarget, AllTarget, $Notification, Notification, $AuthoredNotification, AuthoredNotification, $MailingList, MailingList, $SystemNotification, SystemNotification };

type __defaultExports = {
  "AllTargetTarget": typeof AllTargetTarget;
  "DeliveryMethod": typeof DeliveryMethod;
  "Status": typeof Status;
  "Type": typeof Type;
  "AllTarget": typeof AllTarget;
  "Notification": typeof Notification;
  "AuthoredNotification": typeof AuthoredNotification;
  "MailingList": typeof MailingList;
  "SystemNotification": typeof SystemNotification
};
const __defaultExports: __defaultExports = {
  "AllTargetTarget": AllTargetTarget,
  "DeliveryMethod": DeliveryMethod,
  "Status": Status,
  "Type": Type,
  "AllTarget": AllTarget,
  "Notification": Notification,
  "AuthoredNotification": AuthoredNotification,
  "MailingList": MailingList,
  "SystemNotification": SystemNotification
};
export default __defaultExports;
