// GENERATED by @edgedb/generate v0.5.3

import type { Executor } from "edgedb";

export type GetTrainingNextSectionArgs = {
  readonly id: string;
  readonly session_index: number;
};

export type GetTrainingNextSectionReturns = {
  type_name: string;
  id: string;
  index: number;
  content: string;
  name: string | null;
  duration_: string | null;
  type: ("SINGLE" | "MULTI") | null;
  answers: Array<{
    id: string;
    content: string;
  }>;
} | null;

export function getTrainingNextSection(
  client: Executor,
  args: GetTrainingNextSectionArgs,
): Promise<GetTrainingNextSectionReturns> {
  return client.querySingle(
    `\
with training := (
    select assert_exists(training::Training filter .id = <uuid>$id)
),
next_section := (
    select training.sections
    filter .enabled and .index > <int16>$session_index
    order by .index
    limit 1
),
select assert_single(
    next_section {
        type_name := .__type__.name,
        id,
        index,
        content,
        name := [is training::TrainingPage].name,
        duration_ := duration_to_seconds([is training::TrainingPage].duration),
        type := [is training::Question].type,
        answers := [is training::Question].answers {
            id,
            content,
        },
    }
);`,
    args,
  );
}
