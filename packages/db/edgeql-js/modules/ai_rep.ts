// GENERATED by @gel/generate v0.6.2

import * as $ from "../reflection";
import * as _ from "../imports";
import type * as _std from "./std";
export type $QuestionλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "answer": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "title": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "rep_only": $.PropertyDesc<_std.$bool, $.Cardinality.One, false, false, false, true>;
}>;
type $Question = $.ObjectType<"ai_rep::Question", $QuestionλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
], "ai_rep::Question">;
const $Question = $.makeType<$Question>(_.spec, "0d2c4c1a-1a13-11f0-ad2a-2f8acdcd7228", _.syntax.literal);

const Question: $.$expr_PathNode<$.TypeSet<$Question, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Question, $.Cardinality.Many), null);



export { $Question, Question };

type __defaultExports = {
  "Question": typeof Question
};
const __defaultExports: __defaultExports = {
  "Question": Question
};
export default __defaultExports;
