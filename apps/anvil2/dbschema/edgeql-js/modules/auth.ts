// GENERATED by @edgedb/generate v0.5.6

import * as $ from "../reflection";
import * as _ from "../imports";
import type * as _std from "./std";
import type * as _users from "./users";
import type * as _default from "./default";
export type $PermissionAction = {
  "READ": $.$expr_Literal<$PermissionAction>;
  "UPDATE": $.$expr_Literal<$PermissionAction>;
  "CREATE": $.$expr_Literal<$PermissionAction>;
  "DELETE": $.$expr_Literal<$PermissionAction>;
} & $.EnumType<"auth::PermissionAction", ["READ", "UPDATE", "CREATE", "DELETE"]>;
const PermissionAction: $PermissionAction = $.makeType<$PermissionAction>(_.spec, "bbc2eb02-cad7-11ef-8bae-578c7be1352e", _.syntax.literal);

export type $PermissionSubject = {
  "ALL": $.$expr_Literal<$PermissionSubject>;
  "SELF": $.$expr_Literal<$PermissionSubject>;
  "USER": $.$expr_Literal<$PermissionSubject>;
} & $.EnumType<"auth::PermissionSubject", ["ALL", "SELF", "USER"]>;
const PermissionSubject: $PermissionSubject = $.makeType<$PermissionSubject>(_.spec, "bbc2fba6-cad7-11ef-998c-59a796650482", _.syntax.literal);

export type $BlacklistedTokenλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "expires": $.PropertyDesc<_std.$datetime, $.Cardinality.One, false, false, false, false>;
  "token": $.PropertyDesc<_std.$str, $.Cardinality.One, true, false, false, false>;
}>;
type $BlacklistedToken = $.ObjectType<"auth::BlacklistedToken", $BlacklistedTokenλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
  {token: {__element__: _std.$str, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $BlacklistedToken = $.makeType<$BlacklistedToken>(_.spec, "bfc748f6-cad7-11ef-a338-550b096df076", _.syntax.literal);

const BlacklistedToken: $.$expr_PathNode<$.TypeSet<$BlacklistedToken, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($BlacklistedToken, $.Cardinality.Many), null);

export type $PermissionλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "action": $.PropertyDesc<$PermissionAction, $.Cardinality.One, false, false, false, false>;
  "subject": $.PropertyDesc<$PermissionSubject, $.Cardinality.One, false, false, false, false>;
  "<permissions[is auth::Role]": $.LinkDesc<$Role, $.Cardinality.Many, {}, false, false,  false, false>;
  "<permissions[is users::User]": $.LinkDesc<_users.$User, $.Cardinality.Many, {}, false, false,  false, false>;
  "<permissions[is user]": $.LinkDesc<_default.$user, $.Cardinality.Many, {}, false, false,  false, false>;
  "<permissions[is users::Rep]": $.LinkDesc<_users.$Rep, $.Cardinality.Many, {}, false, false,  false, false>;
  "<permissions": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Permission = $.ObjectType<"auth::Permission", $PermissionλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $Permission = $.makeType<$Permission>(_.spec, "bbc34aac-cad7-11ef-a5bb-35e4e592f2d5", _.syntax.literal);

const Permission: $.$expr_PathNode<$.TypeSet<$Permission, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Permission, $.Cardinality.Many), null);

export type $RoleλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "name": $.PropertyDesc<_std.$str, $.Cardinality.One, true, false, false, false>;
  "permissions": $.LinkDesc<$Permission, $.Cardinality.Many, {}, false, false,  false, false>;
  "<roles[is users::User]": $.LinkDesc<_users.$User, $.Cardinality.Many, {}, false, false,  false, false>;
  "<roles[is user]": $.LinkDesc<_default.$user, $.Cardinality.Many, {}, false, false,  false, false>;
  "<roles[is users::Rep]": $.LinkDesc<_users.$Rep, $.Cardinality.Many, {}, false, false,  false, false>;
  "<roles": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Role = $.ObjectType<"auth::Role", $RoleλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
  {name: {__element__: _std.$str, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $Role = $.makeType<$Role>(_.spec, "bbc6206a-cad7-11ef-b43f-c55d3f437f55", _.syntax.literal);

const Role: $.$expr_PathNode<$.TypeSet<$Role, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Role, $.Cardinality.Many), null);



export { PermissionAction, PermissionSubject, $BlacklistedToken, BlacklistedToken, $Permission, Permission, $Role, Role };

type __defaultExports = {
  "PermissionAction": typeof PermissionAction;
  "PermissionSubject": typeof PermissionSubject;
  "BlacklistedToken": typeof BlacklistedToken;
  "Permission": typeof Permission;
  "Role": typeof Role
};
const __defaultExports: __defaultExports = {
  "PermissionAction": PermissionAction,
  "PermissionSubject": PermissionSubject,
  "BlacklistedToken": BlacklistedToken,
  "Permission": Permission,
  "Role": Role
};
export default __defaultExports;
