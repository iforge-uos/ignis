module event {
    scalar type Type extending enum<
        WORKSHOP,
        LECTURE,
        MEETUP,
        HACKATHON,
        EXHIBITION,
        WEBINAR,
    >;

    type Event extending default::CreatedAt {
        required name: str;
        required description: str;
        required type: Type;
        required starts_at: datetime;
        ends_at: datetime;
        required multi organiser: users::User;
        multi attendees: users::User {
            # required
            created_at: datetime {
                readonly := true;
                default := datetime_of_statement();
            };
            on target delete allow;
        }
        multi interested: users::User {
            # required
            created_at: datetime {
                readonly := true;
                default := datetime_of_statement();
            };
            on target delete allow;
        }
        # on insert add to short term closures? also add location

        index fts::index on ((
            fts::with_options(
                .name,
                language := fts::Language.eng,
                weight_category := fts::Weight.A,
            ),
            fts::with_options(
                .description,
                language := fts::Language.eng,
                weight_category := fts::Weight.B,
            )
        ));
    }
}
