// GENERATED by @gel/generate v0.6.2

import type {Duration, Executor} from "gel";

export type GetTrainingNextSectionArgs = {
  readonly "id": string;
  readonly "session_index": number;
};

export type GetTrainingNextSectionReturns = {
  "type_name": string;
  "id": string;
  "index": number;
  "content": string;
  "name": string | null;
  "duration": Duration | null;
  "type": ("SINGLE" | "MULTI") | null;
  "answers": Array<{
    "id": string;
    "content": string;
  }>;
} | null;

export function getTrainingNextSection(client: Executor, args: GetTrainingNextSectionArgs): Promise<GetTrainingNextSectionReturns> {
  return client.querySingle(`\
with
    training := <training::Training><uuid>$id,
    next_section := (
        select training.sections
        filter .enabled and .index > <int16>$session_index
        order by .index
        limit 1
    ),
select assert_single(
    next_section {
        type_name := .__type__.name,
        id,
        index,
        content,
        [is training::Page].name,
        [is training::Page].duration,
        [is training::Question].type,
        answers := [is training::Question].answers {
            id,
            content,
        },
    }
);`, args);

}
