{
	// Place your ignis workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"oRPC Route File": {
		"scope": "typescript",
		"prefix": "route",
		"body": [
			"import { pub, rep, auth } from \"@/router\";",
			"import e from \"@dbschema/edgeql-js\";",
			"import { z } from \"zod\";",
			"",
			"export const get = ${1|pub,rep,authed|}",
			"  .route({ method: \"GET\", path: \"/${2:path}/{id}\" } )",
			"  .input(z.object({ id: z.string().uuid() }))",
			"  .handler(async ({ input: { id }, context: { db } }) => ",
			"    e.assert_exists(",
			"      e..select(e.${4:module}.${5:Model}, () => ({",
			"        filter_single: { id },",
			"        ...e.${4:module}.${5:Model}[\"*\"]",
			"      })))",
			"      .run(db)",
			"  );",
			"",
			"export const create = ${1}",
			"  .route( { method: \"POST\", path: \"/${2}\" })",
			"  .input(z.object({",
			"      ${3}",
			"  }))",
			"  .handler(async ({ input, context: { db } }) => ",
			"    e",
			"      .select(e.insert(e.${4}.${5}, input), () => ({",
			"        ...e.${4}.${5}[\"*\"]",
			"      }))",
			"      .run(db)",
			"  );",
			"",
			"export const update = ${1}",
			"  .route( { method: \"PATCH\", path: \"/${2}/{id}\" } )",
			"  .input(z.object({",
			"    ${3}",
			"  }))",
			"  .handler(async ({ input: { id, ...rest }, context: { db } }) => ",
			"    e",
			"      .select(e.assert_exists(e.update(e.${4}.${5}, () => ({",
			"        filter_single: { id },",
			"        set: rest",
			"      }))))",
			"      .run(db)",
			"  );"
		],
		"description": "Create a new TRPC route file with basic CRUD operations"
	}
}