// GENERATED by @gel/generate v0.6.2

import * as $ from "../reflection";
import * as _ from "../imports";
import type * as _std from "./std";
import type * as _users from "./users";
export type $Name = {
  "IT": $.$expr_Literal<$Name>;
  "3DP": $.$expr_Literal<$Name>;
  "Hardware": $.$expr_Literal<$Name>;
  "Publicity": $.$expr_Literal<$Name>;
  "Events": $.$expr_Literal<$Name>;
  "Relations": $.$expr_Literal<$Name>;
  "Operations": $.$expr_Literal<$Name>;
  "Recruitment & Development": $.$expr_Literal<$Name>;
  "Health & Safety": $.$expr_Literal<$Name>;
  "Inclusions": $.$expr_Literal<$Name>;
  "Unsorted Reps": $.$expr_Literal<$Name>;
  "Future Reps": $.$expr_Literal<$Name>;
  "Staff": $.$expr_Literal<$Name>;
} & $.EnumType<"team::Name", ["IT", "3DP", "Hardware", "Publicity", "Events", "Relations", "Operations", "Recruitment & Development", "Health & Safety", "Inclusions", "Unsorted Reps", "Future Reps", "Staff"]>;
const Name: $Name = $.makeType<$Name>(_.spec, "969058ee-3ab0-11f0-80e8-fb2d85f53333", _.syntax.literal);

export type $TeamλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "name": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "description": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "tag": $.PropertyDesc<_std.$str, $.Cardinality.One, true, false, false, false>;
  "all_members": $.LinkDesc<_users.$Rep, $.Cardinality.Many, {}, false, true,  false, false>;
  "members": $.LinkDesc<_users.$Rep, $.Cardinality.Many, {}, false, true,  false, false>;
  "<teams[is users::Rep]": $.LinkDesc<_users.$Rep, $.Cardinality.Many, {}, false, false,  false, false>;
  "<teams": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Team = $.ObjectType<"team::Team", $TeamλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
  {tag: {__element__: _std.$str, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
], "team::Team">;
const $Team = $.makeType<$Team>(_.spec, "97a4f4e6-3aac-11f0-8734-2bee438163d5", _.syntax.literal);

const Team: $.$expr_PathNode<$.TypeSet<$Team, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Team, $.Cardinality.Many), null);



export { Name, $Team, Team };

type __defaultExports = {
  "Name": typeof Name;
  "Team": typeof Team
};
const __defaultExports: __defaultExports = {
  "Name": Name,
  "Team": Team
};
export default __defaultExports;
