// GENERATED by @gel/generate v0.6.2

import * as $ from "../reflection";
import * as _ from "../imports";
import type * as _default from "./default";
import type * as _std from "./std";
import type * as _users from "./users";
import type * as _sign_in from "./sign_in";
import type * as _training from "./training";
export type $Status = {
  "NOMINAL": $.$expr_Literal<$Status>;
  "IN_USE": $.$expr_Literal<$Status>;
  "OUT_OF_ORDER": $.$expr_Literal<$Status>;
} & $.EnumType<"tools::Status", ["NOMINAL", "IN_USE", "OUT_OF_ORDER"]>;
const Status: $Status = $.makeType<$Status>(_.spec, "969069e2-3ab0-11f0-8898-8501ae6e4f66", _.syntax.literal);

export type $BookingλShape = $.typeutil.flatten<_default.$AuditableλShape & {
  "ends_at": $.PropertyDesc<_std.$datetime, $.Cardinality.One, false, false, false, false>;
  "starts_at": $.PropertyDesc<_std.$datetime, $.Cardinality.One, false, false, false, false>;
  "duration": $.PropertyDesc<_std.$duration, $.Cardinality.One, false, true, false, false>;
  "cancelled": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, false>;
  "user": $.LinkDesc<_users.$User, $.Cardinality.One, {}, false, false,  false, false>;
  "tool": $.LinkDesc<$Tool, $.Cardinality.One, {}, false, false,  false, false>;
  "<bookings[is users::User]": $.LinkDesc<_users.$User, $.Cardinality.Many, {}, false, false,  false, false>;
  "<bookings[is user]": $.LinkDesc<_default.$user, $.Cardinality.Many, {}, false, false,  false, false>;
  "<bookings[is users::Rep]": $.LinkDesc<_users.$Rep, $.Cardinality.Many, {}, false, false,  false, false>;
  "<bookings[is tools::Tool]": $.LinkDesc<$Tool, $.Cardinality.Many, {}, false, false,  false, false>;
  "<bookings": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Booking = $.ObjectType<"tools::Booking", $BookingλShape, null, [
  ..._default.$Auditable['__exclusives__'],
], "tools::Booking">;
const $Booking = $.makeType<$Booking>(_.spec, "96907dec-3ab0-11f0-bcbc-97c344105a48", _.syntax.literal);

const Booking: $.$expr_PathNode<$.TypeSet<$Booking, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Booking, $.Cardinality.Many), null);

export type $ToolλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "is_bookable": $.PropertyDesc<_std.$bool, $.Cardinality.One, false, false, false, false>;
  "status": $.PropertyDesc<$Status, $.Cardinality.One, false, false, false, false>;
  "min_booking_time": $.PropertyDesc<_std.$duration, $.Cardinality.AtMostOne, false, false, false, true>;
  "max_booking_daily": $.PropertyDesc<_std.$duration, $.Cardinality.AtMostOne, false, false, false, false>;
  "max_booking_weekly": $.PropertyDesc<_std.$duration, $.Cardinality.AtMostOne, false, false, false, false>;
  "name": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "location": $.LinkDesc<_sign_in.$Location, $.Cardinality.One, {}, false, false,  false, false>;
  "training": $.LinkDesc<_training.$Training, $.Cardinality.AtLeastOne, {}, false, false,  false, false>;
  "bookings": $.LinkDesc<$Booking, $.Cardinality.Many, {}, false, true,  false, false>;
  "<tool[is tools::Booking]": $.LinkDesc<$Booking, $.Cardinality.Many, {}, false, false,  false, false>;
  "<tool": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Tool = $.ObjectType<"tools::Tool", $ToolλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
], "tools::Tool">;
const $Tool = $.makeType<$Tool>(_.spec, "982568c0-3ab0-11f0-82b8-c5122e8c6490", _.syntax.literal);

const Tool: $.$expr_PathNode<$.TypeSet<$Tool, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Tool, $.Cardinality.Many), null);



export { Status, $Booking, Booking, $Tool, Tool };

type __defaultExports = {
  "Status": typeof Status;
  "Booking": typeof Booking;
  "Tool": typeof Tool
};
const __defaultExports: __defaultExports = {
  "Status": Status,
  "Booking": Booking,
  "Tool": Tool
};
export default __defaultExports;
