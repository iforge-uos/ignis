// GENERATED by @gel/generate v0.6.2

import type {Executor} from "gel";


export type AllNotificationsReturns = Array<{
  "author": {
    "id": string;
    "pronouns": string | null;
    "email": string;
    "display_name": string;
    "username": string;
    "ucard_number": number;
    "profile_picture": string | null;
    "created_at": Date;
    "roles": Array<{
      "id": string;
      "name": string;
    }>;
  };
  "targets": [({
    "id": string;
    "display_name": string | null;
    "name": string | null;
    "__typename": string;
  }), ...({
    "id": string;
    "display_name": string | null;
    "name": string | null;
    "__typename": string;
  })[]];
  "type": ("ADMIN" | "ADVERT" | "ANNOUNCEMENT" | "EVENT" | "HEALTH_AND_SAFETY" | "INFRACTION" | "PRINTING" | "QUEUE_SLOT_ACTIVE" | "RECRUITMENT" | "REFERRAL" | "REMINDER" | "TRAINING");
  "title": string;
  "status": ("DRAFT" | "REVIEW" | "QUEUED" | "SENDING" | "SENT" | "ERRORED");
  "priority": number;
  "dispatched_at": Date | null;
  "delivery_methods": [(("BANNER" | "EMAIL" | "TRAY" | "POPUP" | "DISCORD")), ...(("BANNER" | "EMAIL" | "TRAY" | "POPUP" | "DISCORD"))[]];
  "content": string;
  "created_at": Date;
  "id": string;
  "updated_at": Date;
  "approved_on": Date | null;
}>;

export function allNotifications(client: Executor): Promise<AllNotificationsReturns> {
  return client.query(`\
select notification::AuthoredNotification {
    *,
    author: {
        id,
        pronouns,
        email,
        display_name,
        username,
        ucard_number,
        profile_picture,
        created_at,
        roles: {
            id,
            name,
        },
    },
    targets: {
        id,
        [is users::User].display_name,
        [is team::Team | event::Event | notification::MailingList].name,
        __typename := .__type__.name,
    }
}`);

}
