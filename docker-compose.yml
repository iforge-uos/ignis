version: "3.8"
services:
  proxy:
    image: traefik:latest
    container_name: proxy
    ports:
      - "8000:80"
    networks:
      - internal
      - external

  db:
    image: edgedb/edgedb:5.1
    env_file:
      - .env
    restart: unless-stopped
    container_name: edgedb
    volumes:
      - db_data:/var/lib/edgedb/data
      - ./apps/anvil/dbschema:/dbschema
      - ./config/secret/db:/ignis_certs:ro
    ports:
      - "5656:5656"
    networks:
      - internal
    healthcheck:
      test: curl --fail http://db:5656/server/status/ready || exit 1
      interval: 8s
      retries: 10
      start_period: 6s
      timeout: 10s

  op-connect-api:
    image: 1password/connect-api:latest
    container_name: op-api
    restart: always
    ports:
      - "8080:8080"
    volumes:
      - "./config/secret/op/1password-credentials.json:/home/opuser/.op/1password-credentials.json"
      - "1p_data:/home/opuser/.op/data"
    networks:
      - internal

  op-connect-sync:
    image: 1password/connect-sync:latest
    container_name: op-sync
    restart: always
    volumes:
      - "./config/secret/op/1password-credentials.json:/home/opuser/.op/1password-credentials.json"
      - "1p_data:/home/opuser/.op/data"
    networks:
      - internal

  cache:
    image: valkey/valkey:unstable
    container_name: cache
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - internal
    volumes:
      - cache_data:/data

  anvil:
    build:
      dockerfile: ./apps/anvil/Dockerfile
      context: .
    container_name: anvil
    restart: unless-stopped
    user: iforge
    env_file:
      - .env
    ports:
      - "3000:3000"
    volumes:
      - "./config/anvil:/config"
      - ./config/secret/db:/ignis_certs:ro
    networks:
      - internal
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_started
      op-connect-api:
        condition: service_started
      op-connect-sync:
        condition: service_started
  
  mine:
    build:
      dockerfile: ./apps/mine/Dockerfile
      context: .
    container_name: mine
    restart: unless-stopped
    user: iforge
    env_file:
      - .env
    ports:
      - "4000:4000"
    volumes:
      - "./config/mine:/config"
    networks:
      - internal
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_started
      op-connect-api:
        condition: service_started
      op-connect-sync:
        condition: service_started

  forge:
    build:
      dockerfile: ./apps/forge/Dockerfile
      context: .
    container_name: forge
    restart: unless-stopped
    ports:
      - "80:80"
    networks:
      - internal

networks:
  internal:
  external:

volumes:
  db_data:
  cache_data:
  1p_data: